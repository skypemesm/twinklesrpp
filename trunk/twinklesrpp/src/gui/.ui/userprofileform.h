/****************************************************************************
** Form interface generated from reading ui file 'userprofileform.ui'
**
** Created: Wed Sep 29 18:51:12 2010
**
** WARNING! All changes made in this file will be lost!
****************************************************************************/

#ifndef USERPROFILEFORM_H
#define USERPROFILEFORM_H

#include <qvariant.h>
#include <qdialog.h>
#include <map>
#include <list>
#include "user.h"
#include "qvaluelist.h"

class QVBoxLayout;
class QHBoxLayout;
class QGridLayout;
class QSpacerItem;
class QLabel;
class QComboBox;
class QListBox;
class QListBoxItem;
class QPushButton;
class QWidgetStack;
class QWidget;
class QGroupBox;
class QLineEdit;
class QSpinBox;
class QCheckBox;
class QTabWidget;
class QButtonGroup;
class QRadioButton;
class QListView;
class QListViewItem;
class QToolButton;

class UserProfileForm : public QDialog
{
    Q_OBJECT

public:
    UserProfileForm( QWidget* parent = 0, const char* name = 0, bool modal = FALSE, WFlags fl = 0 );
    ~UserProfileForm();

    QLabel* profileTextLabel;
    QComboBox* profileComboBox;
    QListBox* categoryListBox;
    QPushButton* okPushButton;
    QPushButton* cancelPushButton;
    QWidgetStack* settingsWidgetStack;
    QWidget* pageUser;
    QLabel* userTitleTextLabel;
    QGroupBox* accountGroupBox;
    QLabel* usernameTextLabel;
    QLabel* domainTextLabel;
    QLabel* organizationTextLabel;
    QLineEdit* usernameLineEdit;
    QLineEdit* domainLineEdit;
    QLineEdit* organizationLineEdit;
    QLineEdit* displayLineEdit;
    QLabel* dislpayTextLabel;
    QGroupBox* authenticationGroupBox;
    QLabel* authRealmTextLabel;
    QLabel* authNameTextLabel;
    QLineEdit* authRealmLineEdit;
    QLineEdit* authNameLineEdit;
    QLabel* authAkaAmfTextLabel;
    QLabel* authAkaOpTextLabel;
    QLineEdit* authPasswordLineEdit;
    QLabel* authPasswordTextLabel;
    QLineEdit* authAkaAmfLineEdit;
    QLineEdit* authAkaOpLineEdit;
    QWidget* pageSipServer;
    QLabel* sipServerTitleTextLabel;
    QGroupBox* registrarGroupBox;
    QLabel* registrarTextLabel;
    QLineEdit* registrarLineEdit;
    QLabel* expiryTextLabel;
    QSpinBox* expirySpinBox;
    QLabel* secondsTextLabel;
    QCheckBox* regAtStartupCheckBox;
    QCheckBox* regAddQvalueCheckBox;
    QLineEdit* regQvalueLineEdit;
    QGroupBox* outboundProxyGroupBox;
    QCheckBox* useProxyCheckBox;
    QLabel* proxyTextLabel;
    QCheckBox* proxyNonResolvableCheckBox;
    QLineEdit* proxyLineEdit;
    QCheckBox* allRequestsCheckBox;
    QWidget* pageRtpAudio;
    QLabel* rtpAudioTitleTextLabel;
    QTabWidget* rtpAudioTabWidget;
    QWidget* tabCodecs;
    QLabel* ptimeTextLabel;
    QSpinBox* ptimeSpinBox;
    QLabel* payloadMsTextLabel;
    QCheckBox* inFarEndCodecPrefCheckBox;
    QCheckBox* outFarEndCodecPrefCheckBox;
    QGroupBox* codecsGroupBox;
    QLabel* availCodecTextLabel;
    QListBox* availCodecListBox;
    QPushButton* addCodecPushButton;
    QPushButton* rmvCodecPushButton;
    QLabel* useCodecTextLabel;
    QListBox* activeCodecListBox;
    QPushButton* upCodecPushButton;
    QPushButton* downCodecPushButton;
    QWidget* tabPreprocessing;
    QGroupBox* preprocessingGroupBox;
    QCheckBox* spxDspAgcCheckBox;
    QLabel* spxDspAgcLevelTextLabel;
    QSpinBox* spxDspAgcLevelSpinBox;
    QCheckBox* spxDspVadCheckBox;
    QCheckBox* spxDspNrdCheckBox;
    QCheckBox* spxDspAecCheckBox;
    QWidget* tabIlbc;
    QGroupBox* ilbcGroupBox;
    QLabel* ilbcPayloadTextLabel;
    QLabel* ilbcPayloadSizeTextLabel;
    QSpinBox* ilbcPayloadSpinBox;
    QComboBox* ilbcPayloadSizeComboBox;
    QWidget* tabSpeex;
    QGroupBox* speexGroupBox;
    QCheckBox* spxPenhCheckBox;
    QLabel* spxUwbPayloadTextLabel;
    QLabel* spxWbPayloadTextLabel;
    QCheckBox* spxVbrCheckBox;
    QSpinBox* spxUwbPayloadSpinBox;
    QCheckBox* spxDtxCheckBox;
    QSpinBox* spxWbPayloadSpinBox;
    QSpinBox* spxNbPayloadSpinBox;
    QLabel* spxQualityTextLabel;
    QSpinBox* spxQualitySpinBox;
    QLabel* spxComplexityTextLabel;
    QSpinBox* spxComplexitySpinBox;
    QLabel* spxNbPayloadTextLabel;
    QWidget* tabG726;
    QGroupBox* g726GroupBox;
    QLabel* g72640PayloadTypeTextLabel;
    QSpinBox* g72640PayloadSpinBox;
    QSpinBox* g72632PayloadSpinBox;
    QLabel* g72624PayloadTypeTextLabel;
    QSpinBox* g72624PayloadSpinBox;
    QLabel* g72632PayloadTypeTextLabel;
    QSpinBox* g72616PayloadSpinBox;
    QLabel* g72616PayloadTypeTextLabel;
    QLabel* g726PackingTextLabel;
    QComboBox* g726PackComboBox;
    QWidget* tabDtmf;
    QGroupBox* dtmfGroupBox;
    QSpinBox* dtmfPayloadTypeSpinBox;
    QLabel* dtmfDurationMsTextLabel;
    QLabel* dtmfVolumeTextLabel;
    QSpinBox* dtmfVolumeSpinBox;
    QSpinBox* dtmfPauseSpinBox;
    QLabel* dtmfDurationTextLabel;
    QLabel* dtmfPauseMsTextLabel;
    QLabel* dtmfPayloadTypeTextLabel;
    QLabel* dtmfPauseTextLabel;
    QLabel* dtmfVolDbmTextLabel;
    QSpinBox* dtmfDurationSpinBox;
    QLabel* dtmfTransportTextLabel;
    QComboBox* dtmfTransportComboBox;
    QWidget* pageSipProtocol;
    QLabel* sipProtocolTitleTextLabel;
    QTabWidget* sipProtoclTabWidget;
    QWidget* tab;
    QGroupBox* optionsGroupBox;
    QLabel* holdVariantTextLabel;
    QComboBox* holdVariantComboBox;
    QCheckBox* missingContactCheckBox;
    QCheckBox* maxForwardsCheckBox;
    QCheckBox* regTimeCheckBox;
    QCheckBox* compactHeadersCheckBox;
    QCheckBox* allowSdpChangeCheckBox;
    QCheckBox* useDomainInContactCheckBox;
    QCheckBox* multiValuesListCheckBox;
    QGroupBox* redirectionGroupBox;
    QCheckBox* allowRedirectionCheckBox;
    QCheckBox* askUserRedirectCheckBox;
    QLabel* maxRedirectTextLabel;
    QSpinBox* maxRedirectSpinBox;
    QGroupBox* sipExtensionsGroupBox;
    QComboBox* ext100relComboBox;
    QLabel* ext100relTextLabel;
    QCheckBox* extReplacesCheckBox;
    QWidget* tab_2;
    QGroupBox* referGroupBox;
    QCheckBox* allowReferCheckBox;
    QCheckBox* askUserReferCheckBox;
    QCheckBox* refereeHoldCheckBox;
    QCheckBox* referrerHoldCheckBox;
    QCheckBox* refreshReferSubCheckBox;
    QCheckBox* referAorCheckBox;
    QCheckBox* transferConsultInprogCheckBox;
    QWidget* TabPage;
    QGroupBox* privacyGroupBox;
    QCheckBox* pPreferredIdCheckBox;
    QWidget* pageNat;
    QLabel* NatTitleTextLabel;
    QGroupBox* transportGroupBox;
    QComboBox* sipTransportComboBox;
    QLabel* sipTransportTextLabel;
    QLabel* udpThresholdTextLabel;
    QSpinBox* udpThresholdSpinBox;
    QButtonGroup* natTraversalButtonGroup_;
    QRadioButton* natNoneRadioButton;
    QRadioButton* natStaticRadioButton;
    QLabel* publicIPTextLabel;
    QLineEdit* publicIPLineEdit;
    QRadioButton* natStunRadioButton;
    QLabel* stunServerTextLabel;
    QLineEdit* stunServerLineEdit;
    QCheckBox* persistentTcpCheckBox;
    QCheckBox* natKeepaliveCheckBox;
    QWidget* pageAddressFormat;
    QLabel* addressFormatTitleTextLabel;
    QGroupBox* telNumberGroupBox;
    QCheckBox* displayTelUserCheckBox;
    QCheckBox* numericalUserIsTelCheckBox;
    QCheckBox* removeSpecialCheckBox;
    QCheckBox* useTelUriCheckBox;
    QLabel* specialTextLabel;
    QLineEdit* specialLineEdit;
    QGroupBox* conversionGroupBox;
    QListView* conversionListView;
    QPushButton* upConversionPushButton;
    QPushButton* downConversionPushButton;
    QPushButton* addConversionPushButton;
    QPushButton* removePushButton;
    QPushButton* editConversionPushButton;
    QLineEdit* testConversionLineEdit;
    QPushButton* testConversionPushButton;
    QWidget* pageTimers;
    QLabel* timersTitleTextLabel;
    QLabel* secNoanswerTextLabel;
    QSpinBox* tmrNatKeepaliveSpinBox;
    QSpinBox* tmrNoanswerSpinBox;
    QLabel* tmrNatKeepaliveTextLabel;
    QLabel* tmrNoanswerTextLabel;
    QWidget* pageRingTones;
    QLabel* ringtonesTitleTextLabel;
    QToolButton* openRingbackToolButton;
    QToolButton* openRingtoneToolButton;
    QLabel* ringbackTextLabel;
    QLineEdit* ringbackLineEdit;
    QLineEdit* ringtoneLineEdit;
    QLabel* ringtoneTextLabel;
    QWidget* pageScripts;
    QLabel* scriptsTitleTextLabel;
    QLineEdit* localReleaseLineEdit;
    QToolButton* openInCallFailedToolButton;
    QToolButton* openIncomingCallScriptToolButton;
    QToolButton* openOutCallAnsweredToolButton;
    QLineEdit* inCallFailedLineEdit;
    QToolButton* openInCallAnsweredToolButton;
    QLineEdit* remoteReleaseLineEdit;
    QToolButton* openOutCallToolButton;
    QLineEdit* incomingCallScriptLineEdit;
    QLineEdit* outCallAnsweredLineEdit;
    QLineEdit* inCallAnsweredLineEdit;
    QLabel* localReleaseTextLabel;
    QToolButton* openOutCallFailedToolButton;
    QLineEdit* outCallFailedLineEdit;
    QLineEdit* outCallLineEdit;
    QLabel* outCallAnsweredTextLabel;
    QLabel* inCallFailedTextLabel;
    QLabel* incomingCallScriptTextLabel;
    QToolButton* openLocalReleaseToolButton;
    QLabel* remoteReleaseTextLabel;
    QLabel* inCallAnsweredTextLabel;
    QToolButton* openRemoteReleaseToolButton;
    QLabel* outCallTextLabel;
    QLabel* outCallFailedTextLabel;
    QWidget* pageSecurity;
    QLabel* securityTitleTextLabel;
    QCheckBox* zrtpEnabledCheckBox;
    QGroupBox* zrtpSettingsGroupBox;
    QCheckBox* zrtpSendIfSupportedCheckBox;
    QCheckBox* zrtpSdpCheckBox;
    QCheckBox* zrtpGoClearWarningCheckBox;
    QWidget* pageVoiceMail;
    QLabel* voiceMailTextLabel;
    QLabel* vmAddressTextLabel;
    QLineEdit* vmAddressLineEdit;
    QComboBox* mwiTypeComboBox;
    QLabel* mwiTypeTextLabel;
    QGroupBox* mwiSollicitedGroupBox;
    QLabel* mwiDurationTextLabel;
    QLabel* mwiUserTextLabel;
    QLineEdit* mwiServerLineEdit;
    QSpinBox* mwiDurationSpinBox;
    QLabel* mwiSecondsTextLabel;
    QLineEdit* mwiUserLineEdit;
    QLabel* mwiServerTextLabel;
    QCheckBox* mwiViaProxyCheckBox;
    QWidget* pageIM;
    QLabel* imTextLabel;
    QLabel* imMaxSessionsTextLabel;
    QSpinBox* imMaxSessionsSpinBox;
    QCheckBox* isComposingCheckBox;
    QWidget* pagePresence;
    QLabel* presTextLabel;
    QGroupBox* presYourGroupBox;
    QCheckBox* presPublishCheckBox;
    QLabel* presPublishTimerTextLabel;
    QSpinBox* presPublishTimeSpinBox;
    QGroupBox* groupBox25;
    QLabel* presSubscribeTimerTextLabel;
    QSpinBox* presSubscribeTimeSpinBox;

    virtual t_audio_codec label2codec( const QString & label );
    virtual QString codec2label( t_audio_codec & codec );
    virtual int ext_support2indexComboItem( t_ext_support ext );
    virtual t_ext_support indexComboItem2ext_support( int index );
    virtual int exec( list<t_user *> profiles, QString show_profile );
    virtual bool check_dynamic_payload( QSpinBox * spb, QValueList<int> & checked_list );
    virtual list<t_number_conversion> get_number_conversions();
    virtual bool validateValues();

public slots:
    virtual void showCategory( int index );
    virtual void populate();
    virtual void initProfileList( list<t_user *> profiles, QString show_profile_name );
    virtual void show( list<t_user *> profiles, QString show_profile );
    virtual void validate();
    virtual void changeProfile( const QString & profileName );
    virtual void chooseFile( QLineEdit * qle, const QString & filter, const QString & caption );
    virtual void chooseRingtone();
    virtual void chooseRingback();
    virtual void chooseIncomingCallScript();
    virtual void chooseInCallAnsweredScript();
    virtual void chooseInCallFailedScript();
    virtual void chooseOutgoingCallScript();
    virtual void chooseOutCallAnsweredScript();
    virtual void chooseOutCallFailedScript();
    virtual void chooseLocalReleaseScript();
    virtual void chooseRemoteReleaseScript();
    virtual void addCodec();
    virtual void removeCodec();
    virtual void upCodec();
    virtual void downCodec();
    virtual void upConversion();
    virtual void downConversion();
    virtual void addConversion();
    virtual void editConversion();
    virtual void removeConversion();
    virtual void testConversion();
    virtual void changeMWIType( int idxMWIType );
    virtual void changeSipTransportProtocol( int idx );

signals:
    void stunServerChanged(t_user *);
    void authCredentialsChanged(t_user *, const string &);
    void sipUserChanged(t_user *);
    void success();
    void mwiChangeUnsubscribe(t_user *);
    void mwiChangeSubscribe(t_user *);

protected:
    QGridLayout* UserProfileFormLayout;
    QHBoxLayout* layout142;
    QHBoxLayout* layout12;
    QSpacerItem* spacer8;
    QVBoxLayout* pageUserLayout;
    QSpacerItem* spacer9;
    QGridLayout* accountGroupBoxLayout;
    QGridLayout* authenticationGroupBoxLayout;
    QVBoxLayout* pageSipServerLayout;
    QSpacerItem* spacer10;
    QGridLayout* registrarGroupBoxLayout;
    QHBoxLayout* layout22;
    QSpacerItem* spacer1;
    QHBoxLayout* layout37;
    QSpacerItem* spacer48;
    QGridLayout* outboundProxyGroupBoxLayout;
    QVBoxLayout* pageRtpAudioLayout;
    QGridLayout* tabCodecsLayout;
    QSpacerItem* spacer38;
    QHBoxLayout* layout18;
    QSpacerItem* spacer24;
    QHBoxLayout* codecsGroupBoxLayout;
    QVBoxLayout* layout19;
    QVBoxLayout* layout14;
    QSpacerItem* spacer17_2;
    QSpacerItem* spacer18;
    QVBoxLayout* layout20;
    QVBoxLayout* layout15;
    QSpacerItem* spacer19_2;
    QSpacerItem* spacer20_2;
    QVBoxLayout* tabPreprocessingLayout;
    QSpacerItem* spacer25;
    QHBoxLayout* preprocessingGroupBoxLayout;
    QSpacerItem* spacer24_2;
    QGridLayout* layout23;
    QVBoxLayout* tabIlbcLayout;
    QSpacerItem* spacer29_2;
    QHBoxLayout* ilbcGroupBoxLayout;
    QSpacerItem* spacer26;
    QVBoxLayout* layout16;
    QVBoxLayout* layout17_2;
    QVBoxLayout* tabSpeexLayout;
    QSpacerItem* spacer30_2;
    QHBoxLayout* speexGroupBoxLayout;
    QSpacerItem* spacer23_2;
    QGridLayout* layout17_3;
    QVBoxLayout* tabG726Layout;
    QSpacerItem* spacer32;
    QGridLayout* g726GroupBoxLayout;
    QSpacerItem* spacer31;
    QGridLayout* layout22_2;
    QHBoxLayout* layout41;
    QSpacerItem* spacer40_2;
    QVBoxLayout* tabDtmfLayout;
    QSpacerItem* spacer23_3;
    QGridLayout* dtmfGroupBoxLayout;
    QSpacerItem* spacer17;
    QGridLayout* layout8;
    QHBoxLayout* layout15_2;
    QSpacerItem* spacer22_2;
    QGridLayout* pageSipProtocolLayout;
    QGridLayout* tabLayout;
    QSpacerItem* spacer24_2_2;
    QGridLayout* optionsGroupBoxLayout;
    QSpacerItem* spacer4;
    QGridLayout* redirectionGroupBoxLayout;
    QSpacerItem* spacer5;
    QGridLayout* sipExtensionsGroupBoxLayout;
    QVBoxLayout* tabLayout_2;
    QSpacerItem* spacer25_2;
    QVBoxLayout* referGroupBoxLayout;
    QVBoxLayout* TabPageLayout;
    QSpacerItem* spacer40;
    QVBoxLayout* privacyGroupBoxLayout;
    QVBoxLayout* pageNatLayout;
    QSpacerItem* spacer19;
    QGridLayout* transportGroupBoxLayout;
    QSpacerItem* spacer46;
    QSpacerItem* spacer47;
    QVBoxLayout* natTraversalButtonGroup_Layout;
    QHBoxLayout* layout32;
    QHBoxLayout* layout33;
    QVBoxLayout* pageAddressFormatLayout;
    QSpacerItem* spacer20;
    QGridLayout* telNumberGroupBoxLayout;
    QVBoxLayout* conversionGroupBoxLayout;
    QHBoxLayout* layout29;
    QVBoxLayout* layout15_2_2;
    QSpacerItem* spacer19_2_2;
    QSpacerItem* spacer20_2_2;
    QHBoxLayout* layout30;
    QSpacerItem* spacer38_2;
    QHBoxLayout* layout24;
    QVBoxLayout* pageTimersLayout;
    QSpacerItem* spacer22;
    QHBoxLayout* layout7;
    QSpacerItem* spacer23;
    QGridLayout* layout6;
    QVBoxLayout* pageRingTonesLayout;
    QSpacerItem* spacer30;
    QGridLayout* layout18_2;
    QVBoxLayout* pageScriptsLayout;
    QSpacerItem* spacer29;
    QGridLayout* layout19_2;
    QVBoxLayout* pageSecurityLayout;
    QSpacerItem* spacer33;
    QVBoxLayout* zrtpSettingsGroupBoxLayout;
    QVBoxLayout* pageVoiceMailLayout;
    QSpacerItem* spacer38_3;
    QGridLayout* layout39;
    QHBoxLayout* layout38;
    QSpacerItem* spacer39;
    QVBoxLayout* mwiSollicitedGroupBoxLayout;
    QGridLayout* layout36;
    QSpacerItem* spacer35;
    QHBoxLayout* layout35;
    QSpacerItem* spacer36;
    QVBoxLayout* pageIMLayout;
    QSpacerItem* spacer40_3;
    QHBoxLayout* layout74;
    QSpacerItem* spacer42;
    QVBoxLayout* pagePresenceLayout;
    QSpacerItem* spacer45;
    QVBoxLayout* presYourGroupBoxLayout;
    QHBoxLayout* layout75;
    QSpacerItem* spacer43;
    QVBoxLayout* groupBox25Layout;
    QHBoxLayout* layout76;
    QSpacerItem* spacer44;

protected slots:
    virtual void languageChange();

private:
    map<t_user *, int> map_last_cat;
    t_user *current_profile;
    int current_profile_idx;
    list<t_user *> profile_list;

    void init();

};

#endif // USERPROFILEFORM_H
